{"version":3,"sources":["Components/Basic/AppBar.jsx","Components/Basic/List.jsx","Components/Basic/ListItem.jsx","Components/Basic/IconButton.jsx","Components/ActionBar.jsx","Components/Collections/ReadingLists.jsx","Components/Checkbox.jsx","Components/Issue.jsx","Components/Collections/ReadingList.jsx","Components/Basic/MainContent.jsx","Components/Basic/Modal.jsx","Components/ModalDialog.jsx","Components/Basic/Textbox.jsx","Components/Basic/Form.jsx","Components/Basic/ModalDialogActions.jsx","Components/Basic/Button.jsx","Components/Collections/ListAdder.jsx","Components/Collections/ListRemover.jsx","Components/Basic/LoadingIcon.jsx","Components/Collections/IssueAdder.jsx","App.jsx","index.jsx"],"names":["AppBar","styled","div","_templateObject","props","theme","main","default","List","List_templateObject","ListItem","ListItem_templateObject","propTypes","order","PropTypes","string","defaultProps","StyledButton","button","IconButton_templateObject","IconButton","_ref","icon","Object","objectWithoutProperties","react_default","a","createElement","react_fontawesome_index_es","fixedWidth","StyledActionBar","nav","ActionBar_templateObject","ActionBar","title","children","className","style","flexGrow","ReadingListItem","ReadingLists_templateObject","ReadingLists","lists","onListSelect","openListAdder","Basic_List","Components_ActionBar","Basic_IconButton","margin","faPlus","onClick","map","list","index","key","name","overflow","description","Checkbox","checked","assign","faCheckSquare","faSquare","IssueContainer","Issue_templateObject","IssueName","attrs","_templateObject2","read","Issue","id","moveUp","moveDown","removeIssue","setRead","Basic_ListItem","faChevronUp","Components_Checkbox","faChevronDown","href","concat","target","faTrashAlt","ReadingList","onClose","addIssues","removeList","moveIssueUp","moveIssueDown","setIssueAsRead","faTimes","issues","issue","Components_Issue","MainContent","MainContent_templateObject","Modal","Modal_templateObject","open","bool","isRequired","Dialog","ModalDialog_templateObject","ModalDialog","handleClose","Basic_Modal","e","currentTarget","Textbox","input","type","Textbox_templateObject","width","Form","form","Form_templateObject","ModalDialogActions","ModalDialogActions_templateObject","Button","Button_templateObject","variant","dark","error","oneOf","ListAdder","addList","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setDescription","Components_ModalDialog","Basic_Form","onSubmit","preventDefault","Basic_Textbox","placeholder","value","onChange","required","Basic_ModalDialogActions","Basic_Button","ListRemover","spin","keyframes","LoadingIcon_templateObject","LoadingIcon","LoadingIcon_templateObject2","size","IssueListItem","IssueAdder_templateObject","IssueAdder","setTitle","year","setYear","_useState5","_useState6","issueNum","setIssueNum","_useState7","_useState8","setIssues","_useState9","_useState10","pendingIssues","setPendingIssues","_useState11","_useState12","loading","setLoading","url","process","fetch","method","then","res","json","data","results","digitalId","catch","err","console","log","faSearch","values","height","Basic_LoadingIcon","padding","backgroundColor","pendingIssuesCopy","marginLeft","light","App","setLists","currentList","setCurrentList","inList","setInList","addingList","setAddingList","removingList","setRemovingList","addingIssues","setAddingIssues","useEffect","storedLists","localStorage","getItem","JSON","parse","setItem","stringify","styled_components_browser_esm","Fragment","Basic_AppBar","Basic_MainContent","Collections_ReadingList","i","listsCopy","toConsumableArray","length","_ref2","splice","Collections_ReadingLists","Collections_ListAdder","Collections_ListRemover","Collections_IssueAdder","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9c4a9f69.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst AppBar = styled.div`\r\n  padding: 8px;\r\n  background-color: ${props => props.theme.main.default};\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default AppBar;\r\n","import styled from 'styled-components';\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport default List;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListItem = styled.div`\r\n  padding: 8px;\r\n  border-bottom: 1px solid;\r\n  width: 100%;\r\n`;\r\n\r\nListItem.propTypes = {\r\n  order: PropTypes.string,\r\n};\r\nListItem.defaultProps = {\r\n  order: 'initial',\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst StyledButton = styled.button`\r\n  border: none;\r\n  padding: 8px;\r\n  font-size: 24px;\r\n  background-color: inherit;\r\n  border-radius: 50%;\r\n  transition: 0.1s;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #DDD;\r\n  }\r\n`;\r\n\r\nfunction IconButton({ icon, ...props }) {\r\n  return (\r\n    <StyledButton {...props}>\r\n      <FontAwesomeIcon icon={icon} fixedWidth />\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nIconButton.propTypes = {\r\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default IconButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledActionBar = styled.nav`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nfunction ActionBar({ title, children, ...props }) {\r\n  return (\r\n    <StyledActionBar {...props}>\r\n      <h1 className=\"draugr\" style={{ flexGrow: 1 }}>{title}</h1>\r\n      {children}\r\n    </StyledActionBar>\r\n  );\r\n}\r\n\r\nActionBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ActionBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport List from '../Basic/List';\r\nimport ListItem from '../Basic/ListItem';\r\nimport IconButton from '../Basic/IconButton';\r\nimport ActionBar from '../ActionBar';\r\n\r\nconst ReadingListItem = styled(ListItem)`\r\n  transition: 0.1s;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #DDD;\r\n  }\r\n`;\r\n\r\nfunction ReadingLists({\r\n  lists,\r\n  onListSelect,\r\n  openListAdder,\r\n  ...props\r\n}) {\r\n  return (\r\n    <List {...props}>\r\n      <ActionBar title=\"Reading Lists\">\r\n        <IconButton style={{ margin: '8px' }} icon={faPlus} onClick={openListAdder} />\r\n      </ActionBar>\r\n      {lists.map((list, index) => (\r\n        <ReadingListItem key={index} onClick={() => onListSelect(index)}>\r\n          <h1 className=\"jormungandr\">{list.name}</h1>\r\n          <p className=\"fenrir\" style={{ overflow: 'hidden' }}>{list.description}</p>\r\n        </ReadingListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nReadingLists.propTypes = {\r\n  lists: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onListSelect: PropTypes.func.isRequired,\r\n  openListAdder: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ReadingLists;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { faSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\r\nimport IconButton from './Basic/IconButton';\r\n\r\nfunction Checkbox({ checked, ...props }) {\r\n  return (\r\n    <IconButton icon={!checked ? faSquare : faCheckSquare} {...props} />\r\n  );\r\n}\r\n\r\nCheckbox.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { faChevronUp, faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport ListItem from './Basic/ListItem';\r\nimport List from './Basic/List';\r\nimport IconButton from './Basic/IconButton';\r\nimport Checkbox from './Checkbox';\r\n\r\nconst IssueContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst IssueName = styled.a.attrs(() => ({\r\n  className: 'jotun',\r\n}))`\r\n  flex-grow: 1;\r\n  margin-left: 16px;\r\n  text-decoration: ${props => (props.read ? 'line-through' : 'initial')};\r\n  color: inherit;\r\n`;\r\n\r\nfunction Issue({\r\n  name,\r\n  id,\r\n  read,\r\n  moveUp,\r\n  moveDown,\r\n  removeIssue,\r\n  setRead,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ListItem {...props}>\r\n      <IssueContainer>\r\n        <List>\r\n          <IconButton icon={faChevronUp} onClick={moveUp} />\r\n          <Checkbox checked={read} onClick={setRead} />\r\n          <IconButton icon={faChevronDown} onClick={moveDown} />\r\n        </List>\r\n        <IssueName href={`https://read.marvel.com/#/book/${id}`} target=\"_blank\" read={read}>{name}</IssueName>\r\n        <IssueContainer>\r\n          <IconButton icon={faTrashAlt} onClick={removeIssue} />\r\n        </IssueContainer>\r\n      </IssueContainer>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nIssue.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  read: PropTypes.bool.isRequired,\r\n  moveUp: PropTypes.func.isRequired,\r\n  moveDown: PropTypes.func.isRequired,\r\n  removeIssue: PropTypes.func.isRequired,\r\n  setRead: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Issue;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport List from '../Basic/List';\r\nimport IconButton from '../Basic/IconButton';\r\nimport ActionBar from '../ActionBar';\r\nimport Issue from '../Issue';\r\n\r\nfunction ReadingList({\r\n  list,\r\n  onClose,\r\n  addIssues,\r\n  removeList,\r\n  moveIssueUp,\r\n  moveIssueDown,\r\n  removeIssue,\r\n  setIssueAsRead,\r\n  ...props\r\n}) {\r\n  return (\r\n    <List {...props}>\r\n      <ActionBar title={list.name}>\r\n        <IconButton style={{ margin: '8px' }} icon={faTrashAlt} onClick={removeList} />\r\n        <IconButton style={{ margin: '8px' }} icon={faPlus} onClick={addIssues} />\r\n        <IconButton style={{ margin: '8px' }} icon={faTimes} onClick={onClose} />\r\n      </ActionBar>\r\n      {list.issues.map((issue, index) => (\r\n        <Issue\r\n          name={issue.name}\r\n          id={issue.id}\r\n          read={issue.read}\r\n          moveUp={() => moveIssueUp(index)}\r\n          moveDown={() => moveIssueDown(index)}\r\n          removeIssue={() => removeIssue(index)}\r\n          setRead={() => setIssueAsRead(index)}\r\n          key={issue.id}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nReadingList.propTypes = {\r\n  list: PropTypes.shape({ name: PropTypes.string.isRequired }).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  addIssues: PropTypes.func.isRequired,\r\n  removeList: PropTypes.func.isRequired,\r\n  moveIssueUp: PropTypes.func.isRequired,\r\n  moveIssueDown: PropTypes.func.isRequired,\r\n  removeIssue: PropTypes.func.isRequired,\r\n  setIssueAsRead: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ReadingList;\r\n","import styled from 'styled-components';\r\n\r\nconst MainContent = styled.div`\r\n  padding: 32px 15%;\r\n`;\r\n\r\nexport default MainContent;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = styled.div`\r\n  display: ${props => (props.open ? 'block' : 'none')};\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,0.4);\r\n  overflow: auto;\r\n`;\r\n\r\nModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Modal from './Basic/Modal';\r\n\r\nconst Dialog = styled.div`\r\n  background-color: #FFFFFF;\r\n  margin: 64px auto;\r\n  padding: 32px;\r\n  width: 75%;\r\n`;\r\n\r\nfunction ModalDialog({\r\n  open,\r\n  handleClose,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Modal open={open} {...props} onClick={e => e.target === e.currentTarget && handleClose()}>\r\n      <Dialog>\r\n        {children}\r\n      </Dialog>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nModalDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ModalDialog;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Textbox = styled.input.attrs(() => ({\r\n  type: 'text',\r\n}))`\r\n  border: none;\r\n  border-bottom: 1px solid;\r\n  padding: 8px;\r\n  margin: 8px 8px 16px 8px;\r\n  width: ${props => props.width};\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  font-family: 'Montserrat', sans-serif;\r\n  background-color: inherit;\r\n`;\r\n\r\nTextbox.propTypes = {\r\n  width: PropTypes.string,\r\n};\r\n\r\nTextbox.defaultProps = {\r\n  width: '200px',\r\n};\r\n\r\nexport default Textbox;\r\n","import styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport default Form;\r\n","import styled from 'styled-components';\r\n\r\nconst ModalDialogActions = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport default ModalDialogActions;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.input.attrs(() => ({\r\n  type: 'button',\r\n  className: 'draugr',\r\n}))`\r\n  margin: 8px;\r\n  padding: 8px 16px;\r\n  border-radius: 8px;\r\n  transition: 0.1s;\r\n  ${props => props.variant === 'outlined' && `\r\n    color: ${props.theme.main.default};\r\n    background-color: white;\r\n    border: 1px solid;\r\n    border-color: ${props.theme.main.default};\r\n    :hover {\r\n      background-color: #DDD;\r\n    }\r\n  `}\r\n  ${props => props.variant === 'primary' && `\r\n    color: white;\r\n    background-color: ${props.theme.main.default};\r\n    border: none;\r\n    :hover {\r\n      background-color: ${props.theme.main.dark};\r\n    }\r\n  `}\r\n  ${props => props.variant === 'error' && `\r\n    color: white;\r\n    background-color: ${props.theme.error.default};\r\n    border: none;\r\n    :hover {\r\n      background-color: ${props.theme.error.dark};\r\n    }\r\n  `}\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.oneOf(['primary', 'outlined', 'error']),\r\n};\r\n\r\nButton.defaultProps = {\r\n  variant: 'outlined',\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalDialog from '../ModalDialog';\r\nimport Textbox from '../Basic/Textbox';\r\nimport Form from '../Basic/Form';\r\nimport ModalDialogActions from '../Basic/ModalDialogActions';\r\nimport Button from '../Basic/Button';\r\n\r\nfunction ListAdder({\r\n  open,\r\n  handleClose,\r\n  addList,\r\n  ...props\r\n}) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  return (\r\n    <ModalDialog open={open} handleClose={handleClose} {...props}>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addList(name, description);\r\n          setName('');\r\n          setDescription('');\r\n        }}\r\n      >\r\n        <h3 className=\"jotun\">Add a New List</h3>\r\n        <Textbox placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)} required />\r\n        <Textbox placeholder=\"Description\" width=\"auto\" value={description} onChange={e => setDescription(e.target.value)} />\r\n        <ModalDialogActions>\r\n          <Button onClick={handleClose} value=\"Cancel\" />\r\n          <Button variant=\"primary\" type=\"submit\" value=\"Add\" />\r\n        </ModalDialogActions>\r\n      </Form>\r\n    </ModalDialog>\r\n  );\r\n}\r\n\r\nListAdder.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  addList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListAdder;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalDialog from '../ModalDialog';\r\nimport ModalDialogActions from '../Basic/ModalDialogActions';\r\nimport Form from '../Basic/Form';\r\nimport Button from '../Basic/Button';\r\n\r\nfunction ListRemover({\r\n  open,\r\n  handleClose,\r\n  removeList,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ModalDialog open={open} handleClose={handleClose} {...props}>\r\n      <Form onSubmit={(e) => {\r\n        e.preventDefault();\r\n        removeList();\r\n      }}\r\n      >\r\n        <h3 className=\"jotun\">Are you sure you want to remove this list?</h3>\r\n        <ModalDialogActions>\r\n          <Button onClick={handleClose} value=\"Cancel\" />\r\n          <Button variant=\"error\" type=\"submit\" value=\"Remove\" />\r\n        </ModalDialogActions>\r\n      </Form>\r\n    </ModalDialog>\r\n  );\r\n}\r\n\r\nListRemover.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  removeList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListRemover;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst spin = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst LoadingIcon = styled.div`\r\n  border: ${props => props.width} solid transparent;\r\n  border-top: ${props => props.width} solid ${props => props.theme.main.default};\r\n  border-radius: 50%;\r\n  margin: 16px;\r\n  width: ${props => props.size};\r\n  height: ${props => props.size};\r\n  animation: ${spin} 2s linear infinite;\r\n`;\r\n\r\nLoadingIcon.propTypes = {\r\n  width: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nLoadingIcon.defaultProps = {\r\n  width: '12px',\r\n  size: '90px',\r\n};\r\n\r\nexport default LoadingIcon;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport ModalDialog from '../ModalDialog';\r\nimport Form from '../Basic/Form';\r\nimport ModalDialogActions from '../Basic/ModalDialogActions';\r\nimport Button from '../Basic/Button';\r\nimport Textbox from '../Basic/Textbox';\r\nimport IconButton from '../Basic/IconButton';\r\nimport List from '../Basic/List';\r\nimport ListItem from '../Basic/ListItem';\r\nimport LoadingIcon from '../Basic/LoadingIcon';\r\n\r\nconst IssueListItem = styled(ListItem)`\r\n  transition: 0.1s;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #DDD;\r\n  }\r\n`;\r\n\r\nfunction IssueAdder({\r\n  open,\r\n  handleClose,\r\n  addIssues,\r\n  ...props\r\n}) {\r\n  const [title, setTitle] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [issueNum, setIssueNum] = useState('');\r\n  const [issues, setIssues] = useState([]);\r\n  const [pendingIssues, setPendingIssues] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <ModalDialog open={open} handleClose={handleClose} {...props}>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          setPendingIssues({});\r\n          setIssues([]);\r\n          setLoading(true);\r\n\r\n          const url = `https://gateway.marvel.com:443/v1/public/comics?apikey=${process.env.REACT_APP_APIKEY}&title=${title}${year !== '' ? `&startYear=${year}` : ''}${issueNum !== '' ? `&issueNumber=${issueNum}` : ''}&noVariants=true&hasDigitalIssue=true&orderBy=issueNumber`;\r\n          fetch(url, { method: 'GET' })\r\n            .then(res => res.json())\r\n            .then(res => res.data.results)\r\n            .then(res => res.map(issue => ({\r\n              name: issue.title,\r\n              id: issue.digitalId,\r\n              read: false,\r\n            })))\r\n            .then((res) => {\r\n              setLoading(false);\r\n              setIssues(res);\r\n            })\r\n            .catch((err) => {\r\n              setLoading(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        <h3 className=\"jotun\">Add Issues</h3>\r\n        <div>\r\n          <Textbox placeholder=\"Title\" width=\"auto\" value={title} onChange={e => setTitle(e.target.value)} required />\r\n          <Textbox placeholder=\"Year\" width=\"auto\" value={year} onChange={e => setYear(e.target.value)} />\r\n          <Textbox placeholder=\"Issue #\" width=\"auto\" value={issueNum} onChange={e => setIssueNum(e.target.value)} />\r\n          <IconButton icon={faSearch} type=\"submit\" />\r\n        </div>\r\n      </Form>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addIssues(Object.values(pendingIssues));\r\n        }}\r\n      >\r\n        <List style={{ height: '300px', overflow: 'auto' }}>\r\n          {loading && <LoadingIcon />}\r\n          {issues.map(issue => (\r\n            <IssueListItem\r\n              style={{ padding: '8px 0px', backgroundColor: pendingIssues[issue.id] ? '#DDD' : 'initial' }}\r\n              key={issue.id}\r\n              onClick={() => {\r\n                const pendingIssuesCopy = Object.assign({}, pendingIssues);\r\n\r\n                if (pendingIssues[issue.id]) {\r\n                  delete pendingIssuesCopy[issue.id];\r\n                } else {\r\n                  pendingIssuesCopy[issue.id] = issue;\r\n                }\r\n\r\n                setPendingIssues(pendingIssuesCopy);\r\n              }}\r\n            >\r\n              <p className=\"alf\" style={{ marginLeft: '16px' }}>{issue.name}</p>\r\n            </IssueListItem>\r\n          ))}\r\n        </List>\r\n        <ModalDialogActions>\r\n          <Button onClick={handleClose} value=\"Cancel\" />\r\n          <Button variant=\"primary\" type=\"submit\" value=\"Add\" />\r\n        </ModalDialogActions>\r\n      </Form>\r\n    </ModalDialog>\r\n  );\r\n}\r\n\r\nIssueAdder.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  addIssues: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default IssueAdder;\r\n","import './Typography.css';\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport AppBar from './Components/Basic/AppBar';\nimport ReadingLists from './Components/Collections/ReadingLists';\nimport ReadingList from './Components/Collections/ReadingList';\nimport MainContent from './Components/Basic/MainContent';\nimport ListAdder from './Components/Collections/ListAdder';\nimport ListRemover from './Components/Collections/ListRemover';\nimport IssueAdder from './Components/Collections/IssueAdder';\n\nconst theme = {\n  main: {\n    light: '#689bc4',\n    default: 'SteelBlue',\n    dark: '#38688f',\n  },\n  error: {\n    default: '#D02020',\n    dark: '#B00000',\n  },\n};\n\nfunction App() {\n  const [lists, setLists] = useState([]);\n  const [currentList, setCurrentList] = useState(0);\n  const [inList, setInList] = useState(false);\n  const [addingList, setAddingList] = useState(false);\n  const [removingList, setRemovingList] = useState(false);\n  const [addingIssues, setAddingIssues] = useState(false);\n\n  useEffect(() => {\n    const storedLists = localStorage.getItem('lists');\n\n    if (storedLists) {\n      setLists(JSON.parse(storedLists));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(lists));\n  }, [lists]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <AppBar className=\"draugr\">\n          Infinity\n        </AppBar>\n        <MainContent>\n          {!inList\n            ? (\n              <ReadingLists\n                lists={lists}\n                onListSelect={(index) => { setCurrentList(index); setInList(true); }}\n                openListAdder={() => setAddingList(true)}\n              />\n            )\n            : (\n              <ReadingList\n                list={lists[currentList]}\n                onClose={() => setInList(false)}\n                addIssues={() => setAddingIssues(true)}\n                removeList={() => setRemovingList(true)}\n                moveIssueUp={(i) => {\n                  if (i === 0) {\n                    return;\n                  }\n\n                  const listsCopy = [...lists];\n                  const { issues } = listsCopy[currentList];\n\n                  [issues[i - 1], issues[i]] = [issues[i], issues[i - 1]];\n                  setLists(listsCopy);\n                }}\n                moveIssueDown={(i) => {\n                  if (i === lists[currentList].issues.length - 1) {\n                    return;\n                  }\n\n                  const listsCopy = [...lists];\n                  const { issues } = listsCopy[currentList];\n\n                  [issues[i], issues[i + 1]] = [issues[i + 1], issues[i]];\n                  setLists(listsCopy);\n                }}\n                removeIssue={(i) => {\n                  const listsCopy = [...lists];\n                  const { issues } = listsCopy[currentList];\n\n                  issues.splice(i, 1);\n                  setLists(listsCopy);\n                }}\n                setIssueAsRead={(i) => {\n                  const listsCopy = [...lists];\n\n                  listsCopy[currentList].issues[i].read = !listsCopy[currentList].issues[i].read;\n                  setLists(listsCopy);\n                }}\n              />\n            )\n          }\n        </MainContent>\n        <ListAdder\n          open={addingList}\n          handleClose={() => setAddingList(false)}\n          addList={(name, description) => {\n            setLists([...lists, {\n              name,\n              description,\n              issues: [],\n            }]);\n            setAddingList(false);\n          }}\n        />\n        <ListRemover\n          open={removingList}\n          handleClose={() => setRemovingList(false)}\n          removeList={() => {\n            setRemovingList(false);\n            setInList(false);\n\n            const listsCopy = [...lists];\n\n            listsCopy.splice(currentList);\n            setLists(listsCopy);\n          }}\n        />\n        <IssueAdder\n          open={addingIssues}\n          handleClose={() => setAddingIssues(false)}\n          addIssues={(issues) => {\n            setAddingIssues(false);\n\n            const listsCopy = [...lists];\n\n            listsCopy[currentList].issues = listsCopy[currentList].issues.concat(issues);\n            setLists(listsCopy);\n          }}\n        />\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}