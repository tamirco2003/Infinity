{"version":3,"sources":["Components/Basic/AppBar.jsx","Components/Basic/List.jsx","Components/Basic/ListItem.jsx","Components/Basic/IconButton.jsx","Components/Collections/ActionBar.jsx","Components/Sections/ReadingLists.jsx","Components/Collections/Checkbox.jsx","Components/Collections/Issue.jsx","Components/Collections/IconDropdown.jsx","Components/Sections/ReadingList.jsx","Components/Basic/MainContent.jsx","Components/Basic/Modal.jsx","Components/Collections/ModalDialog.jsx","Components/Basic/Textbox.jsx","Components/Basic/Form.jsx","Components/Basic/ModalDialogActions.jsx","Components/Basic/Button.jsx","Components/Sections/ListAdder.jsx","Components/Sections/ListRemover.jsx","Components/Basic/LoadingIcon.jsx","Components/Sections/IssueAdder.jsx","Components/Collections/LinkBox.jsx","Components/Sections/ListSharer.jsx","App.jsx","index.jsx"],"names":["AppBar","styled","div","_templateObject","props","theme","main","default","List","List_templateObject","ListItem","ListItem_templateObject","propTypes","order","PropTypes","string","defaultProps","StyledButton","button","IconButton_templateObject","IconButton","_ref","icon","Object","objectWithoutProperties","react_default","a","createElement","react_fontawesome_index_es","fixedWidth","StyledActionBar","nav","ActionBar_templateObject","ActionBar","title","children","className","style","flexGrow","overflow","ReadingListItem","ReadingLists_templateObject","ReadingLists","lists","onListSelect","openListAdder","Basic_List","Collections_ActionBar","Basic_IconButton","margin","faPlus","onClick","map","list","index","key","wordWrap","name","textOverflow","description","Checkbox","checked","assign","faCheckSquare","faSquare","IssueContainer","Issue_templateObject","IssueName","attrs","_templateObject2","read","Issue","id","moveUp","moveDown","removeIssue","setRead","Basic_ListItem","faChevronUp","Collections_Checkbox","faChevronDown","href","concat","target","faTrashAlt","Dropdown","IconDropdown_templateObject","DropdownContent","IconDropdown_templateObject2","open","bool","isRequired","IconDropdown","_useState","useState","_useState2","slicedToArray","setOpen","dropdownRef","useRef","ref","callback","handleClickOutside","event","current","contains","useEffect","document","addEventListener","removeEventListener","useOutsideAlerter","ReadingList","onClose","addIssues","removeList","moveIssueUp","moveIssueDown","setIssueAsRead","shareList","Collections_IconDropdown","faEllipsisV","faShareAlt","faTimes","issues","issue","Collections_Issue","MainContent","MainContent_templateObject","Modal","Modal_templateObject","Dialog","ModalDialog_templateObject","ModalDialog","handleClose","Basic_Modal","e","currentTarget","Textbox","input","type","Textbox_templateObject","width","Form","form","Form_templateObject","ModalDialogActions","ModalDialogActions_templateObject","Button","Button_templateObject","variant","dark","error","oneOf","ListAdder","addList","setName","_useState3","_useState4","setDescription","Collections_ModalDialog","Basic_Form","onSubmit","preventDefault","Basic_Textbox","placeholder","value","onChange","required","Basic_ModalDialogActions","Basic_Button","ListRemover","spin","keyframes","LoadingIcon_templateObject","LoadingIcon","LoadingIcon_templateObject2","size","IssueListItem","IssueAdder_templateObject","IssueAdder","setTitle","year","setYear","_useState5","_useState6","issueNum","setIssueNum","_useState7","_useState8","setIssues","_useState9","_useState10","pendingIssues","setPendingIssues","_useState11","_useState12","loading","setLoading","url","process","fetch","method","then","res","json","data","results","digitalId","catch","err","console","log","faSearch","values","height","Basic_LoadingIcon","padding","backgroundColor","pendingIssuesCopy","marginLeft","LinkBox","link","Fragment","readOnly","faCopy","navigator","clipboard","writeText","ListSharer","Collections_LinkBox","light","App","setLists","currentList","setCurrentList","inList","setInList","addingList","setAddingList","removingList","setRemovingList","addingIssues","setAddingIssues","_useState13","_useState14","sharingList","setSharingList","storedLists","localStorage","getItem","newList","URLSearchParams","window","location","search","get","JSON","parse","atob","toConsumableArray","setItem","stringify","styled_components_browser_esm","Basic_AppBar","Basic_MainContent","Sections_ReadingList","i","listsCopy","length","_ref2","splice","share","split","btoa","Sections_ReadingLists","Sections_ListAdder","Sections_ListRemover","Sections_IssueAdder","Sections_ListSharer","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.a0b74025.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst AppBar = styled.div`\r\n  padding: 8px;\r\n  background-color: ${props => props.theme.main.default};\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default AppBar;\r\n","import styled from 'styled-components';\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport default List;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListItem = styled.div`\r\n  padding: 8px;\r\n  border-bottom: 1px solid;\r\n  width: 100%;\r\n`;\r\n\r\nListItem.propTypes = {\r\n  order: PropTypes.string,\r\n};\r\nListItem.defaultProps = {\r\n  order: 'initial',\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst StyledButton = styled.button`\r\n  border: none;\r\n  padding: 8px;\r\n  font-size: 24px;\r\n  background-color: inherit;\r\n  border-radius: 50%;\r\n  transition: 0.1s;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #DDD;\r\n  }\r\n`;\r\n\r\nfunction IconButton({ icon, ...props }) {\r\n  return (\r\n    <StyledButton {...props}>\r\n      <FontAwesomeIcon icon={icon} fixedWidth />\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nIconButton.propTypes = {\r\n  icon: PropTypes.shape({\r\n    iconName: PropTypes.string,\r\n    prefix: PropTypes.string,\r\n    icon: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n\r\nexport default IconButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledActionBar = styled.nav`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nfunction ActionBar({ title, children, ...props }) {\r\n  return (\r\n    <StyledActionBar {...props}>\r\n      <h1 className=\"draugr\" style={{ flexGrow: 1, overflow: 'hidden' }}>{title}</h1>\r\n      {children}\r\n    </StyledActionBar>\r\n  );\r\n}\r\n\r\nActionBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ActionBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport List from '../Basic/List';\r\nimport ListItem from '../Basic/ListItem';\r\nimport IconButton from '../Basic/IconButton';\r\nimport ActionBar from '../Collections/ActionBar';\r\n\r\nconst ReadingListItem = styled(ListItem)`\r\n  transition: 0.1s;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #DDD;\r\n  }\r\n`;\r\n\r\nfunction ReadingLists({\r\n  lists,\r\n  onListSelect,\r\n  openListAdder,\r\n  ...props\r\n}) {\r\n  return (\r\n    <List {...props}>\r\n      <ActionBar title=\"Reading Lists\">\r\n        <IconButton style={{ margin: '8px' }} icon={faPlus} onClick={openListAdder} />\r\n      </ActionBar>\r\n      {lists.map((list, index) => (\r\n        <ReadingListItem key={index} onClick={() => onListSelect(index)}>\r\n          <h1 className=\"jormungandr\" style={{ wordWrap: 'break-word' }}>{list.name}</h1>\r\n          <p className=\"fenrir\" style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>{list.description}</p>\r\n        </ReadingListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nReadingLists.propTypes = {\r\n  lists: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onListSelect: PropTypes.func.isRequired,\r\n  openListAdder: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ReadingLists;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { faSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\r\nimport IconButton from '../Basic/IconButton';\r\n\r\nfunction Checkbox({ checked, ...props }) {\r\n  return (\r\n    <IconButton icon={!checked ? faSquare : faCheckSquare} {...props} />\r\n  );\r\n}\r\n\r\nCheckbox.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { faChevronUp, faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport ListItem from '../Basic/ListItem';\r\nimport List from '../Basic/List';\r\nimport IconButton from '../Basic/IconButton';\r\nimport Checkbox from './Checkbox';\r\n\r\nconst IssueContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst IssueName = styled.a.attrs(() => ({\r\n  className: 'jotun',\r\n}))`\r\n  flex-grow: 1;\r\n  margin-left: 16px;\r\n  text-decoration: ${props => (props.read ? 'line-through' : 'initial')};\r\n  word-break: 'break-word';\r\n  color: inherit;\r\n`;\r\n\r\nfunction Issue({\r\n  name,\r\n  id,\r\n  read,\r\n  moveUp,\r\n  moveDown,\r\n  removeIssue,\r\n  setRead,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ListItem {...props}>\r\n      <IssueContainer>\r\n        <List>\r\n          <IconButton icon={faChevronUp} onClick={moveUp} />\r\n          <Checkbox checked={read} onClick={setRead} />\r\n          <IconButton icon={faChevronDown} onClick={moveDown} />\r\n        </List>\r\n        <IssueName href={`https://read.marvel.com/#/book/${id}`} target=\"_blank\" read={read}>{name}</IssueName>\r\n        <IssueContainer>\r\n          <IconButton icon={faTrashAlt} onClick={removeIssue} />\r\n        </IssueContainer>\r\n      </IssueContainer>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nIssue.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  read: PropTypes.bool.isRequired,\r\n  moveUp: PropTypes.func.isRequired,\r\n  moveDown: PropTypes.func.isRequired,\r\n  removeIssue: PropTypes.func.isRequired,\r\n  setRead: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Issue;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '../Basic/IconButton';\r\n\r\nconst Dropdown = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n\r\nconst DropdownContent = styled.div`\r\n  display: ${props => (props.open ? 'block' : 'none')};\r\n  position: absolute;\r\n  background-color: #f1f1f1;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n`;\r\n\r\nDropdownContent.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n  function handleClickOutside(event) {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  });\r\n}\r\n\r\nfunction IconDropdown({ icon, children, ...props }) {\r\n  const [open, setOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n  useOutsideAlerter(dropdownRef, () => setOpen(false));\r\n\r\n  return (\r\n    <Dropdown ref={dropdownRef} {...props}>\r\n      <IconButton icon={icon} onClick={() => setOpen(!open)} />\r\n      <DropdownContent open={open}>\r\n        {children}\r\n      </DropdownContent>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nIconDropdown.propTypes = {\r\n  icon: PropTypes.shape({\r\n    iconName: PropTypes.string,\r\n    prefix: PropTypes.string,\r\n    icon: PropTypes.array,\r\n  }).isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default IconDropdown;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  faPlus,\r\n  faTimes,\r\n  faShareAlt,\r\n  faEllipsisV,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport List from '../Basic/List';\r\nimport IconButton from '../Basic/IconButton';\r\nimport ActionBar from '../Collections/ActionBar';\r\nimport Issue from '../Collections/Issue';\r\nimport IconDropdown from '../Collections/IconDropdown';\r\n\r\nfunction ReadingList({\r\n  list,\r\n  onClose,\r\n  addIssues,\r\n  removeList,\r\n  moveIssueUp,\r\n  moveIssueDown,\r\n  removeIssue,\r\n  setIssueAsRead,\r\n  shareList,\r\n  ...props\r\n}) {\r\n  return (\r\n    <List {...props}>\r\n      <ActionBar title={list.name}>\r\n        <IconDropdown icon={faEllipsisV}>\r\n          <IconButton style={{ margin: '8px' }} icon={faTrashAlt} onClick={removeList} />\r\n          <IconButton style={{ margin: '8px' }} icon={faShareAlt} onClick={shareList} />\r\n          <IconButton style={{ margin: '8px' }} icon={faPlus} onClick={addIssues} />\r\n        </IconDropdown>\r\n        <IconButton style={{ margin: '8px' }} icon={faTimes} onClick={onClose} />\r\n      </ActionBar>\r\n      {list.issues.map((issue, index) => (\r\n        <Issue\r\n          name={issue.name}\r\n          id={issue.id}\r\n          read={issue.read}\r\n          moveUp={() => moveIssueUp(index)}\r\n          moveDown={() => moveIssueDown(index)}\r\n          removeIssue={() => removeIssue(index)}\r\n          setRead={() => setIssueAsRead(index)}\r\n          key={issue.id}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nReadingList.propTypes = {\r\n  list: PropTypes.shape({ name: PropTypes.string.isRequired }).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  addIssues: PropTypes.func.isRequired,\r\n  removeList: PropTypes.func.isRequired,\r\n  moveIssueUp: PropTypes.func.isRequired,\r\n  moveIssueDown: PropTypes.func.isRequired,\r\n  removeIssue: PropTypes.func.isRequired,\r\n  setIssueAsRead: PropTypes.func.isRequired,\r\n  shareList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ReadingList;\r\n","import styled from 'styled-components';\r\n\r\nconst MainContent = styled.div`\r\n  padding: 32px 15%;\r\n`;\r\n\r\nexport default MainContent;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = styled.div`\r\n  display: ${props => (props.open ? 'block' : 'none')};\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,0.4);\r\n  overflow: auto;\r\n`;\r\n\r\nModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Modal from '../Basic/Modal';\r\n\r\nconst Dialog = styled.div`\r\n  background-color: #FFFFFF;\r\n  margin: 64px auto;\r\n  padding: 32px;\r\n  width: 75%;\r\n`;\r\n\r\nfunction ModalDialog({\r\n  open,\r\n  handleClose,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Modal open={open} {...props} onClick={e => e.target === e.currentTarget && handleClose()}>\r\n      <Dialog>\r\n        {children}\r\n      </Dialog>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nModalDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ModalDialog;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Textbox = styled.input.attrs(() => ({\r\n  type: 'text',\r\n}))`\r\n  border: none;\r\n  border-bottom: 1px solid;\r\n  padding: 8px;\r\n  margin: 8px 8px 16px 8px;\r\n  width: ${props => props.width};\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  font-family: 'Montserrat', sans-serif;\r\n  background-color: inherit;\r\n`;\r\n\r\nTextbox.propTypes = {\r\n  width: PropTypes.string,\r\n};\r\n\r\nTextbox.defaultProps = {\r\n  width: '200px',\r\n};\r\n\r\nexport default Textbox;\r\n","import styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport default Form;\r\n","import styled from 'styled-components';\r\n\r\nconst ModalDialogActions = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport default ModalDialogActions;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.input.attrs(() => ({\r\n  type: 'button',\r\n  className: 'draugr',\r\n}))`\r\n  margin: 8px;\r\n  padding: 8px 16px;\r\n  border-radius: 8px;\r\n  transition: 0.1s;\r\n  ${props => props.variant === 'outlined' && `\r\n    color: ${props.theme.main.default};\r\n    background-color: white;\r\n    border: 1px solid;\r\n    border-color: ${props.theme.main.default};\r\n    :hover {\r\n      background-color: #DDD;\r\n    }\r\n  `}\r\n  ${props => props.variant === 'primary' && `\r\n    color: white;\r\n    background-color: ${props.theme.main.default};\r\n    border: none;\r\n    :hover {\r\n      background-color: ${props.theme.main.dark};\r\n    }\r\n  `}\r\n  ${props => props.variant === 'error' && `\r\n    color: white;\r\n    background-color: ${props.theme.error.default};\r\n    border: none;\r\n    :hover {\r\n      background-color: ${props.theme.error.dark};\r\n    }\r\n  `}\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.oneOf(['primary', 'outlined', 'error']),\r\n};\r\n\r\nButton.defaultProps = {\r\n  variant: 'outlined',\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalDialog from '../Collections/ModalDialog';\r\nimport Textbox from '../Basic/Textbox';\r\nimport Form from '../Basic/Form';\r\nimport ModalDialogActions from '../Basic/ModalDialogActions';\r\nimport Button from '../Basic/Button';\r\n\r\nfunction ListAdder({\r\n  open,\r\n  handleClose,\r\n  addList,\r\n  ...props\r\n}) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  return (\r\n    <ModalDialog open={open} handleClose={handleClose} {...props}>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addList(name, description);\r\n          setName('');\r\n          setDescription('');\r\n        }}\r\n      >\r\n        <h3 className=\"jotun\">Add a New List</h3>\r\n        <Textbox placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)} required />\r\n        <Textbox placeholder=\"Description\" width=\"auto\" value={description} onChange={e => setDescription(e.target.value)} />\r\n        <ModalDialogActions>\r\n          <Button onClick={handleClose} value=\"Cancel\" />\r\n          <Button variant=\"primary\" type=\"submit\" value=\"Add\" />\r\n        </ModalDialogActions>\r\n      </Form>\r\n    </ModalDialog>\r\n  );\r\n}\r\n\r\nListAdder.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  addList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListAdder;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalDialog from '../Collections/ModalDialog';\r\nimport ModalDialogActions from '../Basic/ModalDialogActions';\r\nimport Form from '../Basic/Form';\r\nimport Button from '../Basic/Button';\r\n\r\nfunction ListRemover({\r\n  open,\r\n  handleClose,\r\n  removeList,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ModalDialog open={open} handleClose={handleClose} {...props}>\r\n      <Form onSubmit={(e) => {\r\n        e.preventDefault();\r\n        removeList();\r\n      }}\r\n      >\r\n        <h3 className=\"jotun\">Are you sure you want to remove this list?</h3>\r\n        <ModalDialogActions>\r\n          <Button onClick={handleClose} value=\"Cancel\" />\r\n          <Button variant=\"error\" type=\"submit\" value=\"Remove\" />\r\n        </ModalDialogActions>\r\n      </Form>\r\n    </ModalDialog>\r\n  );\r\n}\r\n\r\nListRemover.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  removeList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListRemover;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst spin = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst LoadingIcon = styled.div`\r\n  border: ${props => props.width} solid transparent;\r\n  border-top: ${props => props.width} solid ${props => props.theme.main.default};\r\n  border-radius: 50%;\r\n  margin: 16px;\r\n  width: ${props => props.size};\r\n  height: ${props => props.size};\r\n  animation: ${spin} 2s linear infinite;\r\n`;\r\n\r\nLoadingIcon.propTypes = {\r\n  width: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nLoadingIcon.defaultProps = {\r\n  width: '12px',\r\n  size: '90px',\r\n};\r\n\r\nexport default LoadingIcon;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport ModalDialog from '../Collections/ModalDialog';\r\nimport Form from '../Basic/Form';\r\nimport ModalDialogActions from '../Basic/ModalDialogActions';\r\nimport Button from '../Basic/Button';\r\nimport Textbox from '../Basic/Textbox';\r\nimport IconButton from '../Basic/IconButton';\r\nimport List from '../Basic/List';\r\nimport ListItem from '../Basic/ListItem';\r\nimport LoadingIcon from '../Basic/LoadingIcon';\r\n\r\nconst IssueListItem = styled(ListItem)`\r\n  transition: 0.1s;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #DDD;\r\n  }\r\n`;\r\n\r\nfunction IssueAdder({\r\n  open,\r\n  handleClose,\r\n  addIssues,\r\n  ...props\r\n}) {\r\n  const [title, setTitle] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [issueNum, setIssueNum] = useState('');\r\n  const [issues, setIssues] = useState([]);\r\n  const [pendingIssues, setPendingIssues] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <ModalDialog open={open} handleClose={handleClose} {...props}>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          setPendingIssues({});\r\n          setIssues([]);\r\n          setLoading(true);\r\n\r\n          const url = `https://gateway.marvel.com:443/v1/public/comics?apikey=${process.env.REACT_APP_APIKEY}&title=${title}${year !== '' ? `&startYear=${year}` : ''}${issueNum !== '' ? `&issueNumber=${issueNum}` : ''}&noVariants=true&hasDigitalIssue=true&orderBy=issueNumber`;\r\n          fetch(url, { method: 'GET' })\r\n            .then(res => res.json())\r\n            .then(res => res.data.results)\r\n            .then(res => res.map(issue => ({\r\n              name: issue.title,\r\n              id: issue.digitalId,\r\n              read: false,\r\n            })))\r\n            .then((res) => {\r\n              setLoading(false);\r\n              setIssues(res);\r\n            })\r\n            .catch((err) => {\r\n              setLoading(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        <h3 className=\"jotun\">Add Issues</h3>\r\n        <div>\r\n          <Textbox placeholder=\"Title\" width=\"auto\" value={title} onChange={e => setTitle(e.target.value)} required />\r\n          <Textbox placeholder=\"Year\" width=\"auto\" value={year} onChange={e => setYear(e.target.value)} />\r\n          <Textbox placeholder=\"Issue #\" width=\"auto\" value={issueNum} onChange={e => setIssueNum(e.target.value)} />\r\n          <IconButton icon={faSearch} type=\"submit\" />\r\n        </div>\r\n      </Form>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addIssues(Object.values(pendingIssues));\r\n        }}\r\n      >\r\n        <List style={{ height: '300px', overflow: 'auto' }}>\r\n          {loading && <LoadingIcon />}\r\n          {issues.map(issue => (\r\n            <IssueListItem\r\n              style={{ padding: '8px 0px', backgroundColor: pendingIssues[issue.id] ? '#DDD' : 'initial' }}\r\n              key={issue.id}\r\n              onClick={() => {\r\n                const pendingIssuesCopy = Object.assign({}, pendingIssues);\r\n\r\n                if (pendingIssues[issue.id]) {\r\n                  delete pendingIssuesCopy[issue.id];\r\n                } else {\r\n                  pendingIssuesCopy[issue.id] = issue;\r\n                }\r\n\r\n                setPendingIssues(pendingIssuesCopy);\r\n              }}\r\n            >\r\n              <p className=\"alf\" style={{ marginLeft: '16px' }}>{issue.name}</p>\r\n            </IssueListItem>\r\n          ))}\r\n        </List>\r\n        <ModalDialogActions>\r\n          <Button onClick={handleClose} value=\"Cancel\" />\r\n          <Button variant=\"primary\" type=\"submit\" value=\"Add\" />\r\n        </ModalDialogActions>\r\n      </Form>\r\n    </ModalDialog>\r\n  );\r\n}\r\n\r\nIssueAdder.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  addIssues: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default IssueAdder;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\r\nimport Textbox from '../Basic/Textbox';\r\nimport IconButton from '../Basic/IconButton';\r\n\r\nfunction LinkBox({ link, ...props }) {\r\n  return (\r\n    <>\r\n      <Textbox value={link} width=\"75%\" readOnly {...props} />\r\n      <IconButton icon={faCopy} onClick={() => navigator.clipboard.writeText(link)} />\r\n    </>\r\n  );\r\n}\r\n\r\nLinkBox.propTypes = {\r\n  link: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LinkBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalDialog from '../Collections/ModalDialog';\r\nimport LinkBox from '../Collections/LinkBox';\r\nimport ModalDialogActions from '../Basic/ModalDialogActions';\r\nimport Button from '../Basic/Button';\r\n\r\nfunction ListSharer({\r\n  open,\r\n  handleClose,\r\n  link,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ModalDialog open={open} handleClose={handleClose} {...props}>\r\n      <h3 className=\"jotun\">Share List</h3>\r\n      <LinkBox link={link} />\r\n      <ModalDialogActions>\r\n        <Button variant=\"primary\" onClick={handleClose} value=\"Close\" />\r\n      </ModalDialogActions>\r\n    </ModalDialog>\r\n  );\r\n}\r\n\r\nListSharer.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  link: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ListSharer;\r\n","import './Typography.css';\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport AppBar from './Components/Basic/AppBar';\nimport ReadingLists from './Components/Sections/ReadingLists';\nimport ReadingList from './Components/Sections/ReadingList';\nimport MainContent from './Components/Basic/MainContent';\nimport ListAdder from './Components/Sections/ListAdder';\nimport ListRemover from './Components/Sections/ListRemover';\nimport IssueAdder from './Components/Sections/IssueAdder';\nimport ListSharer from './Components/Sections/ListSharer';\n\nconst theme = {\n  main: {\n    light: '#689bc4',\n    default: 'SteelBlue',\n    dark: '#38688f',\n  },\n  error: {\n    default: '#D02020',\n    dark: '#B00000',\n  },\n};\n\nfunction App() {\n  const [lists, setLists] = useState([]);\n  const [currentList, setCurrentList] = useState(0);\n  const [inList, setInList] = useState(false);\n  const [addingList, setAddingList] = useState(false);\n  const [removingList, setRemovingList] = useState(false);\n  const [addingIssues, setAddingIssues] = useState(false);\n  const [sharingList, setSharingList] = useState(false);\n\n  useEffect(() => {\n    const storedLists = localStorage.getItem('lists');\n    const searchParams = new URLSearchParams(window.location.search);\n    let newList = searchParams.get('newlist') || null;\n\n    if (newList) {\n      newList = JSON.parse(atob(newList));\n    }\n\n    if (storedLists) {\n      if (newList) {\n        setLists([...JSON.parse(storedLists), newList]);\n      } else {\n        setLists(JSON.parse(storedLists));\n      }\n    } else if (newList) {\n      setLists([newList]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(lists));\n  }, [lists]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <AppBar className=\"draugr\">\n          Infinity\n        </AppBar>\n        <MainContent>\n          {!inList\n            ? (\n              <ReadingLists\n                lists={lists}\n                onListSelect={(index) => { setCurrentList(index); setInList(true); }}\n                openListAdder={() => setAddingList(true)}\n              />\n            )\n            : (\n              <ReadingList\n                list={lists[currentList]}\n                onClose={() => setInList(false)}\n                addIssues={() => setAddingIssues(true)}\n                removeList={() => setRemovingList(true)}\n                moveIssueUp={(i) => {\n                  if (i === 0) {\n                    return;\n                  }\n\n                  const listsCopy = [...lists];\n                  const { issues } = listsCopy[currentList];\n\n                  [issues[i - 1], issues[i]] = [issues[i], issues[i - 1]];\n                  setLists(listsCopy);\n                }}\n                moveIssueDown={(i) => {\n                  if (i === lists[currentList].issues.length - 1) {\n                    return;\n                  }\n\n                  const listsCopy = [...lists];\n                  const { issues } = listsCopy[currentList];\n\n                  [issues[i], issues[i + 1]] = [issues[i + 1], issues[i]];\n                  setLists(listsCopy);\n                }}\n                removeIssue={(i) => {\n                  const listsCopy = [...lists];\n                  const { issues } = listsCopy[currentList];\n\n                  issues.splice(i, 1);\n                  setLists(listsCopy);\n                }}\n                setIssueAsRead={(i) => {\n                  const listsCopy = [...lists];\n\n                  listsCopy[currentList].issues[i].read = !listsCopy[currentList].issues[i].read;\n                  setLists(listsCopy);\n                }}\n                shareList={() => {\n                  if (navigator.share) {\n                    navigator.share({\n                      title: 'Infinity',\n                      url: `${window.location.href.split('?')[0]}?newlist=${btoa(JSON.stringify(lists[currentList]))}`,\n                    });\n                  } else {\n                    setSharingList(true);\n                  }\n                }}\n              />\n            )\n          }\n        </MainContent>\n        <ListAdder\n          open={addingList}\n          handleClose={() => setAddingList(false)}\n          addList={(name, description) => {\n            setLists([...lists, {\n              name,\n              description,\n              issues: [],\n            }]);\n            setAddingList(false);\n          }}\n        />\n        <ListRemover\n          open={removingList}\n          handleClose={() => setRemovingList(false)}\n          removeList={() => {\n            setRemovingList(false);\n            setInList(false);\n\n            const listsCopy = [...lists];\n\n            listsCopy.splice(currentList, 1);\n            setLists(listsCopy);\n          }}\n        />\n        <IssueAdder\n          open={addingIssues}\n          handleClose={() => setAddingIssues(false)}\n          addIssues={(issues) => {\n            setAddingIssues(false);\n\n            const listsCopy = [...lists];\n\n            listsCopy[currentList].issues = listsCopy[currentList].issues.concat(issues);\n            setLists(listsCopy);\n          }}\n        />\n        <ListSharer\n          open={sharingList}\n          handleClose={() => setSharingList(false)}\n          link={`${window.location.href.split('?')[0]}?newlist=${btoa(JSON.stringify(lists[currentList]))}`}\n        />\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}